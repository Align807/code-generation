package ${package};

import ${package}.impl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.FactoryHelper;
import org.protege.owl.codegeneration.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLOntology;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: ${javaClass}
 * @version generated on ${date}
 */
public class ${javaClass} {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;

    public ${javaClass}(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public ${javaClass}(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
